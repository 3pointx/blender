diff -Naur OpenShadingLanguage-Release-1.9.9/src/include/OSL/llvm_util.h external_osl/src/include/OSL/llvm_util.h
--- OpenShadingLanguage-Release-1.9.9/src/include/OSL/llvm_util.h	2018-05-01 16:39:02 -0600
+++ external_osl/src/include/OSL/llvm_util.h	2018-08-25 14:05:00 -0600
@@ -33,6 +33,8 @@
 
 #include <vector>
 
+#define OSL_HAS_BLENDER_CLEANUP_FIX
+
 #ifdef LLVM_NAMESPACE
 namespace llvm = LLVM_NAMESPACE;
 #endif
@@ -487,6 +489,7 @@
     std::string func_name (llvm::Function *f);
 
     static size_t total_jit_memory_held ();
+    static void Cleanup ();
 
 private:
     class MemoryManager;
diff -Naur OpenShadingLanguage-Release-1.9.9/src/liboslexec/llvm_util.cpp external_osl/src/liboslexec/llvm_util.cpp
--- OpenShadingLanguage-Release-1.9.9/src/liboslexec/llvm_util.cpp	2018-05-01 16:39:02 -0600
+++ external_osl/src/liboslexec/llvm_util.cpp	2018-08-25 14:04:27 -0600
@@ -140,7 +140,10 @@
 };
 
 
-
+void LLVM_Util::Cleanup ()
+{
+       if(jitmm_hold) jitmm_hold->clear();
+}
 
 size_t
 LLVM_Util::total_jit_memory_held ()
diff -Naur org/CMakeLists.txt external_osl/CMakeLists.txt
--- org/CMakeLists.txt  2020-12-01 12:37:15 -0700
+++ external_osl/CMakeLists.txt 2021-01-20 13:26:50 -0700
@@ -84,6 +84,11 @@
      CACHE STRING "Directory where OptiX PTX files will be installed")
 set (CMAKE_DEBUG_POSTFIX "" CACHE STRING "Library naming postfix for Debug builds (e.g., '_debug')")

+set (USE_OIIO_STATIC ON CACHE BOOL "If OIIO is built static")
+if (USE_OIIO_STATIC)
+    add_definitions ("-DOIIO_STATIC_BUILD=1")
+    add_definitions ("-DOIIO_STATIC_DEFINE=1")
+endif ()

 set (OSL_NO_DEFAULT_TEXTURESYSTEM OFF CACHE BOOL "Do not use create a raw OIIO::TextureSystem")
 if (OSL_NO_DEFAULT_TEXTURESYSTEM)
diff -Naur external_osl_orig/src/liboslcomp/oslcomp.cpp external_osl/src/liboslcomp/oslcomp.cpp
--- external_osl_orig/src/liboslcomp/oslcomp.cpp        2021-06-01 13:44:18 -0600
+++ external_osl/src/liboslcomp/oslcomp.cpp     2021-06-28 09:11:06 -0600
@@ -21,6 +21,13 @@
 #if !defined(__STDC_CONSTANT_MACROS)
 #    define __STDC_CONSTANT_MACROS 1
 #endif
+
+// clang uses CALLBACK in its templates which causes issues if it is already defined
+#ifdef _WIN32 && defined(CALLBACK)
+#    undef CALLBACK
+#endif
+
+//
 #include <clang/Basic/TargetInfo.h>
 #include <clang/Frontend/CompilerInstance.h>
 #include <clang/Frontend/TextDiagnosticPrinter.h>
diff -Naur orig/src/cmake/externalpackages.cmake external_osl/src/cmake/externalpackages.cmake
--- orig/src/cmake/externalpackages.cmake	2022-01-07 18:36:45 -0700
+++ external_osl/src/cmake/externalpackages.cmake	2022-08-02 08:10:27 -0600
@@ -36,12 +36,10 @@
 
 ###########################################################################
 # Boost setup
-if (LINKSTATIC)
-    set (Boost_USE_STATIC_LIBS ON)
-else ()
-    if (MSVC)
-        add_definitions (-DBOOST_ALL_DYN_LINK=1)
-    endif ()
+# Blender links most things static, but not boost 
+set (Boost_USE_STATIC_LIBS OFF)
+if (MSVC)
+    add_definitions (-DBOOST_ALL_DYN_LINK=1)
 endif ()
 if (BOOST_CUSTOM)
     set (Boost_FOUND true)
@@ -80,6 +78,7 @@
 
 
 checked_find_package (ZLIB REQUIRED)  # Needed by several packages
+checked_find_package (PNG REQUIRED)  # Needed since OIIO needs it
 
 # IlmBase & OpenEXR
 checked_find_package (OpenEXR REQUIRED
